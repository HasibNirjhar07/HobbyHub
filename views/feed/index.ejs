<div class="row">
  <div class="col-md-8">
    <h1>Your Feed</h1>

    <% if (posts.length === 0) { %>
    <div class="alert alert-info">
      <p class="mb-0">
        Your feed is empty. Follow some users or create posts to see content
        here.
      </p>
    </div>
    <div class="text-center mt-3">
      <a href="/users/search" class="btn btn-primary mr-2">Find Users</a>
      <a href="/posts/create" class="btn btn-success">Create Post</a>
    </div>
    <% } else { %> <% posts.forEach(function(post) { %>
    <div class="card mb-4">
      <div class="card-header d-flex align-items-center">
        <img
          src="<%= post.user.photo || '/img/default-profile.png' %>"
          alt="<%= post.user.username %>"
          class="rounded-circle mr-2"
          style="width: 40px; height: 40px; object-fit: cover"
        />
        <div>
          <a
            href="/users/profile/<%= post.user._id %>"
            class="text-dark font-weight-bold"
          >
            <%= post.user.displayName || post.user.username %>
          </a>
          <div class="text-muted small">
            @<%= post.user.username %> â€¢ <%= new
            Date(post.createdAt).toLocaleString() %> <% if (post.updatedAt >
            post.createdAt) { %> (Edited) <% } %>
          </div>
        </div>
      </div>
      <div class="card-body">
        <p class="card-text"><%= post.content %></p>

        <% if (post.mediaFiles && post.mediaFiles.length > 0) { %>
        <div class="media-container mt-3 mb-2">
          <% post.mediaFiles.forEach(function(media) { %> <% if (media.fileType
          === 'image') { %>
          <div class="media-item mb-2">
            <img
              src="<%= media.filePath %>"
              class="img-fluid rounded"
              alt="Post image"
            />
          </div>
          <% } else if (media.fileType === 'video') { %>
          <div class="media-item mb-2">
            <video controls class="img-fluid rounded">
              <source src="<%= media.filePath %>" type="video/mp4" />
              Your browser does not support the video tag.
            </video>
          </div>
          <% } else if (media.fileType === 'audio') { %>
          <div class="media-item mb-2">
            <audio controls class="w-100">
              <source src="<%= media.filePath %>" />
              Your browser does not support the audio tag.
            </audio>
          </div>
          <% } %> <% }); %>
        </div>
        <% } %>

        <div class="d-flex mt-3">
          <button
            class="btn btn-sm mr-2 like-btn <%= post.likes.includes(user._id) ? 'btn-primary' : 'btn-outline-primary' %>"
            data-id="<%= post._id %>"
          >
            <i class="far fa-thumbs-up"></i>
            <span class="like-count"><%= post.likes.length %></span>
          </button>
          <button
            class="btn btn-sm mr-2 dislike-btn <%= post.dislikes.includes(user._id) ? 'btn-danger' : 'btn-outline-danger' %>"
            data-id="<%= post._id %>"
          >
            <i class="far fa-thumbs-down"></i>
            <span class="dislike-count"><%= post.dislikes.length %></span>
          </button>
          <a
            href="/posts/<%= post._id %>"
            class="btn btn-sm btn-outline-secondary"
          >
            <i class="far fa-comment"></i> Comments
          </a>

          <% if (post.user._id.toString() === user._id.toString()) { %>
          <div class="ml-auto">
            <a
              href="/posts/edit/<%= post._id %>"
              class="btn btn-sm btn-outline-secondary"
            >
              <i class="fas fa-edit"></i> Edit
            </a>
            <button
              class="btn btn-sm btn-outline-danger delete-post-btn"
              data-id="<%= post._id %>"
            >
              <i class="fas fa-trash"></i> Delete Post
            </button>
          </div>
          <% } %>
        </div>
      </div>
    </div>
    <% }); %> <% } %>
  </div>

  <div class="col-md-4">
    <div class="card mb-4">
      <div class="card-header">
        <h5 class="mb-0">Welcome, <%= user.displayName || user.username %></h5>
      </div>
      <div class="card-body">
        <div class="text-center mb-3">
          <img
            src="<%= user.photo || '/img/default-profile.png' %>"
            alt="Profile"
            class="rounded-circle mb-2"
            style="width: 100px; height: 100px; object-fit: cover"
          />
          <h5><%= user.displayName || user.username %></h5>
          <p class="text-muted">@<%= user.username %></p>
        </div>
        <div class="d-flex justify-content-around text-center">
          <div>
            <h6><%= user.followers.length %></h6>
            <a
              href="/users/profile/<%= user._id %>/followers"
              class="text-muted"
              >Followers</a
            >
          </div>
          <div>
            <h6><%= user.following.length %></h6>
            <a
              href="/users/profile/<%= user._id %>/following"
              class="text-muted"
              >Following</a
            >
          </div>
        </div>
        <div class="mt-3">
          <a
            href="/users/profile/<%= user._id %>"
            class="btn btn-outline-primary btn-block"
          >
            <i class="fas fa-user"></i> My Profile
          </a>
        </div>
      </div>
    </div>

    <div class="card">
      <div class="card-header">
        <h5 class="mb-0">Quick Links</h5>
      </div>
      <div class="card-body">
        <a href="/posts/create" class="btn btn-success btn-block mb-2">
          <i class="fas fa-plus-circle"></i> Create New Post
        </a>
        <a href="/users/search" class="btn btn-info btn-block">
          <i class="fas fa-search"></i> Find Users
        </a>
      </div>
    </div>
  </div>
</div>

<!-- End Path: views/feed/index.ejs -->
<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Like button event listeners
    document.querySelectorAll(".like-btn").forEach((btn) => {
      btn.addEventListener("click", function (e) {
        e.preventDefault() // Prevent default action
        const postId = this.getAttribute("data-id")

        console.log("Like button clicked for post:", postId)

        fetch(`/posts/${postId}/like`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          credentials: "include",
        })
          .then((response) => {
            if (!response.ok) {
              throw new Error(
                `Server returned ${response.status}: ${response.statusText}`
              )
            }
            return response.json()
          })
          .then((data) => {
            console.log("Like response data:", data)
            updateButtonStates(postId, data)
          })
          .catch((error) => {
            console.error("Error liking post:", error)
            alert("Failed to like post. Please try again.")
          })
      })
    })

    // Dislike button event listeners
    document.querySelectorAll(".dislike-btn").forEach((btn) => {
      btn.addEventListener("click", function (e) {
        e.preventDefault() // Prevent default action
        const postId = this.getAttribute("data-id")

        console.log("Dislike button clicked for post:", postId)

        fetch(`/posts/${postId}/dislike`, {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          credentials: "include",
        })
          .then((response) => {
            if (!response.ok) {
              throw new Error(
                `Server returned ${response.status}: ${response.statusText}`
              )
            }
            return response.json()
          })
          .then((data) => {
            console.log("Dislike response data:", data)
            updateButtonStates(postId, data)
          })
          .catch((error) => {
            console.error("Error disliking post:", error)
            alert("Failed to dislike post. Please try again.")
          })
      })
    })

    // Add this function to update button states
    function updateButtonStates(postId, data) {
      const likeBtn = document.querySelector(`.like-btn[data-id="${postId}"]`)
      const dislikeBtn = document.querySelector(
        `.dislike-btn[data-id="${postId}"]`
      )

      if (likeBtn) {
        // Update like count
        const likeCount = likeBtn.querySelector(".like-count")
        if (likeCount) {
          likeCount.textContent = data.likes
        }

        // Update like button appearance
        if (data.userLiked) {
          likeBtn.classList.remove("btn-outline-primary")
          likeBtn.classList.add("btn-primary")
        } else {
          likeBtn.classList.remove("btn-primary")
          likeBtn.classList.add("btn-outline-primary")
        }
      }

      if (dislikeBtn) {
        // Update dislike count
        const dislikeCount = dislikeBtn.querySelector(".dislike-count")
        if (dislikeCount) {
          dislikeCount.textContent = data.dislikes
        }

        // Update dislike button appearance
        if (data.userDisliked) {
          dislikeBtn.classList.remove("btn-outline-danger")
          dislikeBtn.classList.add("btn-danger")
        } else {
          dislikeBtn.classList.remove("btn-danger")
          dislikeBtn.classList.add("btn-outline-danger")
        }
      }
    }

    // Delete post functionality
    document.querySelectorAll(".delete-post-btn").forEach((btn) => {
      btn.addEventListener("click", function () {
        if (confirm("Are you sure you want to delete this post?")) {
          const postId = this.getAttribute("data-id")
          fetch(`/posts/${postId}`, {
            method: "DELETE",
            headers: { "X-Requested-With": "XMLHttpRequest" },
            credentials: "same-origin",
          })
            .then((response) => {
              if (!response.ok) {
                if (response.status === 404) throw new Error("Post not found")
                if (response.status === 403) throw new Error("Not authorized")
                throw new Error("Server error")
              }
              return response.json()
            })
            .then((data) => {
              if (data.success) {
                const postCard = this.closest(".card")
                if (postCard) {
                  postCard.remove()
                } else {
                  window.location.reload()
                }
              }
            })
            .catch((error) => {
              console.error("Error:", error)
              alert("There was a problem deleting the post: " + error.message)
            })
        }
      })
    })

    // Highlight active like/dislike buttons
    document
      .querySelectorAll('[data-user-liked="true"]')
      .forEach((btn) => btn.classList.add("active"))
    document
      .querySelectorAll('[data-user-disliked="true"]')
      .forEach((btn) => btn.classList.add("active"))
  })
</script>
